version: '3.8'

services:
  # Prometheus - Metrics collection
  prometheus:
    image: prom/prometheus:latest
    container_name: stridehr-prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=30d'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
    ports:
      - "9090:9090"
    volumes:
      - ./docker/monitoring/prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    networks:
      - stridehr-network
    restart: always
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9090/-/healthy"]
      timeout: 10s
      retries: 3
      start_period: 30s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Grafana - Metrics visualization
  grafana:
    image: grafana/grafana:latest
    container_name: stridehr-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}
      - GF_SECURITY_SECRET_KEY=${GRAFANA_SECRET_KEY}
      - GF_SMTP_ENABLED=true
      - GF_SMTP_HOST=${SMTP_HOST}:${SMTP_PORT}
      - GF_SMTP_USER=${SMTP_USERNAME}
      - GF_SMTP_PASSWORD=${SMTP_PASSWORD}
      - GF_SMTP_FROM_ADDRESS=${SMTP_FROM_EMAIL}
      - GF_SMTP_FROM_NAME=StrideHR Monitoring
    volumes:
      - grafana_data:/var/lib/grafana
      - ./docker/monitoring/grafana/grafana.ini:/etc/grafana/grafana.ini
      - ./docker/monitoring/grafana/dashboards:/var/lib/grafana/dashboards
      - ./docker/monitoring/grafana/provisioning:/etc/grafana/provisioning
    networks:
      - stridehr-network
    restart: always
    depends_on:
      - prometheus
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/api/health || exit 1"]
      timeout: 10s
      retries: 3
      start_period: 30s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Alertmanager - Alert handling
  alertmanager:
    image: prom/alertmanager:latest
    container_name: stridehr-alertmanager
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
      - '--web.external-url=http://localhost:9093'
      - '--cluster.advertise-address=0.0.0.0:9093'
    ports:
      - "9093:9093"
    volumes:
      - ./docker/monitoring/alertmanager:/etc/alertmanager
      - alertmanager_data:/alertmanager
    environment:
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_USERNAME=${SMTP_USERNAME}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - SMTP_FROM_EMAIL=${SMTP_FROM_EMAIL}
      - ALERT_EMAIL_TO=${ALERT_EMAIL_TO}
    networks:
      - stridehr-network
    restart: always
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9093/-/healthy"]
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Node Exporter - System metrics
  node-exporter:
    image: prom/node-exporter:latest
    container_name: stridehr-node-exporter
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    networks:
      - stridehr-network
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # MySQL Exporter - Database metrics
  mysql-exporter:
    image: prom/mysqld-exporter:latest
    container_name: stridehr-mysql-exporter
    command:
      - '--mysqld.username=${DB_USER}'
      - '--mysqld.address=mysql:3306'
    environment:
      - DATA_SOURCE_NAME=${DB_USER}:${DB_PASSWORD}@(mysql:3306)/
    ports:
      - "9104:9104"
    networks:
      - stridehr-network
    restart: always
    depends_on:
      - mysql
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Redis Exporter - Cache metrics
  redis-exporter:
    image: oliver006/redis_exporter:latest
    container_name: stridehr-redis-exporter
    command:
      - '--redis.addr=redis://redis:6379'
    ports:
      - "9121:9121"
    networks:
      - stridehr-network
    restart: always
    depends_on:
      - redis
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Nginx Exporter - Web server metrics
  nginx-exporter:
    image: nginx/nginx-prometheus-exporter:latest
    container_name: stridehr-nginx-exporter
    command:
      - '-nginx.scrape-uri=http://nginx:8080/nginx_status'
    ports:
      - "9113:9113"
    networks:
      - stridehr-network
    restart: always
    depends_on:
      - nginx
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # cAdvisor - Container metrics
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: stridehr-cadvisor
    ports:
      - "8080:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    privileged: true
    devices:
      - /dev/kmsg
    networks:
      - stridehr-network
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Blackbox Exporter - Endpoint monitoring
  blackbox-exporter:
    image: prom/blackbox-exporter:latest
    container_name: stridehr-blackbox-exporter
    command:
      - '--config.file=/etc/blackbox_exporter/config.yml'
    ports:
      - "9115:9115"
    volumes:
      - ./docker/monitoring/blackbox:/etc/blackbox_exporter
    networks:
      - stridehr-network
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Loki - Log aggregation
  loki:
    image: grafana/loki:latest
    container_name: stridehr-loki
    command: -config.file=/etc/loki/local-config.yaml
    ports:
      - "3100:3100"
    volumes:
      - ./docker/monitoring/loki:/etc/loki
      - loki_data:/loki
    networks:
      - stridehr-network
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Promtail - Log collection
  promtail:
    image: grafana/promtail:latest
    container_name: stridehr-promtail
    command: -config.file=/etc/promtail/config.yml
    volumes:
      - ./docker/monitoring/promtail:/etc/promtail
      - ./logs:/var/log/stridehr:ro
      - /var/log:/var/log:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
    networks:
      - stridehr-network
    restart: always
    depends_on:
      - loki
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

volumes:
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
  alertmanager_data:
    driver: local
  loki_data:
    driver: local

networks:
  stridehr-network:
    external: true