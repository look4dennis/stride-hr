version: '3.8'

services:
  mysql:
    image: mysql:8.0
    container_name: stridehr-mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-password}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-StrideHR_Dev}
      MYSQL_USER: ${MYSQL_USER:-stridehr}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-stridehr123}
    ports:
      - "${MYSQL_PORT:-3306}:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/init:/docker-entrypoint-initdb.d
      - ./docker/mysql/conf.d:/etc/mysql/conf.d
    networks:
      - stridehr-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  redis:
    image: redis:7-alpine
    container_name: stridehr-redis
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
      - ./docker/redis/redis.conf:/usr/local/etc/redis/redis.conf
    networks:
      - stridehr-network
    restart: unless-stopped
    command: redis-server /usr/local/etc/redis/redis.conf
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      timeout: 10s
      retries: 5

  api:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: final
    container_name: stridehr-api
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT:-Development}
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionStrings__DefaultConnection=Server=mysql;Database=${MYSQL_DATABASE:-StrideHR_Dev};User=${MYSQL_USER:-stridehr};Password=${MYSQL_PASSWORD:-stridehr123};Port=3306;
      - Redis__ConnectionString=stridehr-redis:6379
      - JWT__SecretKey=${JWT_SECRET_KEY:-your-super-secret-jwt-key-here-change-in-production}
      - JWT__Issuer=${JWT_ISSUER:-StrideHR}
      - JWT__Audience=${JWT_AUDIENCE:-StrideHR-Users}
    ports:
      - "${API_PORT:-5000}:8080"
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - stridehr-network
    restart: unless-stopped
    volumes:
      - ./backend/logs:/app/logs
      - ./backend/uploads:/app/uploads
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      timeout: 10s
      retries: 5
      start_period: 30s

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: final
    container_name: stridehr-frontend
    ports:
      - "${FRONTEND_PORT:-4200}:80"
    depends_on:
      api:
        condition: service_healthy
    networks:
      - stridehr-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      timeout: 10s
      retries: 3

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local

networks:
  stridehr-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16