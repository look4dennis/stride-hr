user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

# Security: Limit worker processes
worker_rlimit_nofile 65535;

events {
    worker_connections 4096;
    use epoll;
    multi_accept on;
    accept_mutex off;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Security: Hide nginx version
    server_tokens off;
    more_set_headers "Server: StrideHR";

    # Logging format with security information
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    '$request_time $upstream_response_time '
                    '$ssl_protocol $ssl_cipher';

    log_format security '$remote_addr - $remote_user [$time_local] "$request" '
                       '$status "$http_user_agent" "$http_x_forwarded_for" '
                       '$request_length $request_time';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;

    # Performance settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    keepalive_requests 1000;
    types_hash_max_size 2048;
    client_header_timeout 60;
    client_body_timeout 60;
    send_timeout 60;

    # Security: Buffer settings to prevent buffer overflow attacks
    client_body_buffer_size 128k;
    client_max_body_size 50m;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;
    output_buffers 1 32k;
    postpone_output 1460;

    # Security: Limit request methods
    map $request_method $allowed_method {
        default 0;
        GET 1;
        POST 1;
        PUT 1;
        DELETE 1;
        OPTIONS 1;
        HEAD 1;
    }

    # Gzip compression with security considerations
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml
        application/x-font-ttf
        application/vnd.ms-fontobject
        font/opentype;

    # Security: Rate limiting zones
    limit_req_zone $binary_remote_addr zone=api:10m rate=30r/s;
    limit_req_zone $binary_remote_addr zone=login:10m rate=5r/m;
    limit_req_zone $binary_remote_addr zone=upload:10m rate=1r/s;
    limit_req_zone $binary_remote_addr zone=global:10m rate=100r/s;

    # Security: Connection limiting
    limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;
    limit_conn_zone $server_name zone=conn_limit_per_server:10m;

    # Security: Request size limiting
    limit_req_zone $binary_remote_addr zone=req_limit_per_ip:10m rate=10r/s;

    # Upstream servers with health checks
    upstream stridehr_frontend {
        server stridehr-frontend-prod:80 max_fails=3 fail_timeout=30s;
        keepalive 32;
        keepalive_requests 100;
        keepalive_timeout 60s;
    }

    upstream stridehr_api {
        server stridehr-api-prod:8080 max_fails=3 fail_timeout=30s;
        keepalive 32;
        keepalive_requests 100;
        keepalive_timeout 60s;
    }

    # Security: Block common attack patterns
    map $request_uri $blocked_uri {
        default 0;
        ~*\.(php|asp|aspx|jsp)$ 1;
        ~*/wp-admin 1;
        ~*/wp-login 1;
        ~*/phpmyadmin 1;
        ~*/admin 1;
        ~*\.env 1;
        ~*\.git 1;
    }

    # Security: Block malicious user agents
    map $http_user_agent $blocked_agent {
        default 0;
        ~*sqlmap 1;
        ~*nikto 1;
        ~*nessus 1;
        ~*masscan 1;
        ~*nmap 1;
        "~*python-requests" 1;
        "~*curl" 1;
        "~*wget" 1;
        "" 1;
    }

    # HTTP to HTTPS redirect
    server {
        listen 80 default_server;
        server_name _;
        
        # Security: Block malicious requests
        if ($blocked_uri) {
            return 444;
        }
        
        if ($blocked_agent) {
            return 444;
        }
        
        if ($allowed_method = 0) {
            return 405;
        }
        
        # Allow Let's Encrypt challenges
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }
        
        # Redirect all other traffic to HTTPS
        location / {
            return 301 https://$server_name$request_uri;
        }
    }

    # HTTPS server
    server {
        listen 443 ssl http2 default_server;
        server_name _;

        # Security: Connection and request limits
        limit_conn conn_limit_per_ip 20;
        limit_conn conn_limit_per_server 1000;
        limit_req zone=global burst=50 nodelay;

        # SSL configuration
        ssl_certificate /etc/nginx/ssl/cert.pem;
        ssl_certificate_key /etc/nginx/ssl/key.pem;
        ssl_session_timeout 1d;
        ssl_session_cache shared:SSL:50m;
        ssl_session_tickets off;

        # Modern SSL configuration
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;

        # OCSP stapling
        ssl_stapling on;
        ssl_stapling_verify on;
        resolver 8.8.8.8 8.8.4.4 valid=300s;
        resolver_timeout 5s;

        # Security headers
        include /etc/nginx/security-headers.conf;

        # Security: Block malicious requests
        if ($blocked_uri) {
            access_log /var/log/nginx/blocked.log security;
            return 444;
        }
        
        if ($blocked_agent) {
            access_log /var/log/nginx/blocked.log security;
            return 444;
        }
        
        if ($allowed_method = 0) {
            return 405;
        }

        # Frontend proxy
        location / {
            proxy_pass http://stridehr_frontend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $server_name;
            proxy_cache_bypass $http_upgrade;
            
            # Security: Timeouts
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # Security: Buffer settings
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            proxy_busy_buffers_size 8k;
        }

        # API proxy with enhanced rate limiting
        location /api/ {
            limit_req zone=api burst=50 nodelay;
            
            proxy_pass http://stridehr_api/api/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $server_name;
            proxy_cache_bypass $http_upgrade;
            
            # Security: Enhanced timeouts
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # Security: Hide backend headers
            proxy_hide_header X-Powered-By;
            proxy_hide_header Server;
        }

        # Authentication endpoints with strict rate limiting
        location ~ ^/api/auth/(login|register|forgot-password) {
            limit_req zone=login burst=3 nodelay;
            
            proxy_pass http://stridehr_api;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $server_name;
            
            # Security: Log authentication attempts
            access_log /var/log/nginx/auth.log security;
        }

        # File upload with strict rate limiting and size checks
        location /api/upload {
            limit_req zone=upload burst=5 nodelay;
            
            # Security: File type validation
            location ~ \.(php|asp|aspx|jsp|exe|bat|sh)$ {
                return 403;
            }
            
            proxy_pass http://stridehr_api/api/upload;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $server_name;
            
            # Security: Extended timeouts for file uploads
            proxy_connect_timeout 300s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
            
            # Security: Request size limit
            client_max_body_size 50m;
        }

        # SignalR hub proxy with WebSocket security
        location /hubs/ {
            proxy_pass http://stridehr_api/hubs/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $server_name;
            proxy_cache_bypass $http_upgrade;
            
            # WebSocket timeouts
            proxy_read_timeout 86400;
            proxy_send_timeout 86400;
        }

        # Health check endpoint (no rate limiting)
        location /health {
            access_log off;
            proxy_pass http://stridehr_api/health;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Security: Deny access to sensitive files and directories
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }

        location ~ \.(env|config|ini|log|bak|backup|old|tmp)$ {
            deny all;
            access_log off;
            log_not_found off;
        }

        # Security: Block common exploit attempts
        location ~ /(wp-admin|wp-login|phpmyadmin|admin|administrator) {
            access_log /var/log/nginx/blocked.log security;
            return 444;
        }

        # Security: Custom error pages
        error_page 400 401 402 403 404 /error.html;
        error_page 500 501 502 503 504 /error.html;
        
        location = /error.html {
            root /usr/share/nginx/html;
            internal;
        }
    }
}